{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import'./main.css';import Navbar from\"./components/navbar\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Main(){const searchParams=new URLSearchParams(window.location.search);//spotify vars\nconst[isPlaying,setPlaying]=useState(false);const[nextState,setNext]=useState(false);//spotify user \nconst[user,setUser]=useState();//spotify authentication\nconst[accessToken,setToken]=useState(searchParams.get('access_token'));const[refreshToken,setRefresh]=useState(searchParams.get('refresh_token'));//spotify song info\nconst[song,setSong]=useState(\"Play a song on your Spotify Player!\");const[songImg,setImg]=useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");const[albumLink,setAlbumLink]=useState();//spotify artist info\nconst[artistImg,setArtistImg]=useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");const[artist,setArtist]=useState(\"Spotify\");const[artistLink,setArtistLink]=useState();//youtube vars\nconst[videoId,setvideoId]=useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");const API_KEY=\"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";//navigation\nconst navigate=useNavigate();const getRefreshToken=async()=>{try{const result=await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);if(!result.ok){throw new Error(`Network response was not ok: ${result.statusText}`);}const token=JSON.parse(await result.text());setToken(token.access_token);setRefresh(token.refresh_token);alert(\"Refreshed Spotify Token!\");}catch(error){console.error(error);}};//redirect when new access token granted\nuseEffect(()=>{if(accessToken&&refreshToken){navigate(`?access_token=${accessToken}&refresh_token=${refreshToken}`);}},[accessToken,refreshToken]);//check whether user is playing music on spotify and get their current song info\nconst checkPlayState=async()=>{try{const result=await fetch('https://api.spotify.com/v1/me/player',{method:'GET',headers:{'Authorization':`Bearer ${accessToken}`}});try{const data=JSON.parse(await result.text());setPlaying(data.is_playing);if(isPlaying){try{if(song!=data.item.name){setNext(!nextState);}else{return;}setSong(data.item.name);setArtist(data.item.artists[0]['name']);setImg(data.item.album.images[0].url);getArtistInfo(data.item.artists[0].id);setAlbumLink(data.item.album.external_urls.spotify);}catch{setSong(\"Advertisement\");setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");setAlbumLink();}}else{setSong(\"Play a song in Spotify!\");getUserInfo();setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");setAlbumLink();}}catch{setSong(\"Refresh your Spotify Token!\");setPlaying(false);}}catch(error){setSong(\"Refresh your Spotify Token!\");setPlaying(false);}};//gets artist information\nconst getArtistInfo=async artistId=>{const result=await fetch(`https://api.spotify.com/v1/artists/${artistId}`,{method:'GET',headers:{'Authorization':`Bearer ${accessToken}`}});const data=JSON.parse(await result.text());setArtistImg(data.images[0].url);setArtistLink(data.external_urls.spotify);};//checks user's current status\nuseEffect(()=>{const intervalId=setInterval(checkPlayState,4000);return()=>clearInterval(intervalId);});//gets and sets music video \nasync function getVideoID(){try{const result=await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);const data=await result.json();setvideoId(data.items[0].id.videoId);}catch{alert(\"MV not found/limited to 100 songs a day\");setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");return;}}//gets new mv when next song played\nuseEffect(()=>{if(isPlaying){getVideoID();}},[nextState]);//gets username and profile picture of spotify account\nasync function getUserInfo(){try{const result=await fetch('https://api.spotify.com/v1/me',{method:'GET',headers:{'Authorization':`Bearer ${accessToken}`}});const data=await result.json();setUser(data.display_name);}catch{setUser('Refresh Spotify Token');}}useEffect(()=>{getUserInfo();});return/*#__PURE__*/_jsxs(\"div\",{className:\"bg\",children:[/*#__PURE__*/_jsx(Navbar,{name:user}),/*#__PURE__*/_jsxs(\"div\",{className:\"body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mvPlayer\",children:/*#__PURE__*/_jsx(\"iframe\",{className:\"player\",src:`https://www.youtube.com/embed/${videoId}?autoplay=1`,allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true,title:\"YouTube video player\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:getRefreshToken,className:\"refreshBtn\",children:\"Refresh Spotify Token\"}),/*#__PURE__*/_jsx(\"div\",{className:\"songDescription\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"songInfo\",children:[/*#__PURE__*/_jsx(\"a\",{href:albumLink,target:\"_blank\",children:/*#__PURE__*/_jsx(\"img\",{src:songImg,alt:\"Album Cover\",className:\"albumCover\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"songTitle\",children:song})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"artistDescription\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"artistInfo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:artist}),/*#__PURE__*/_jsx(\"a\",{href:artistLink,target:\"_blank\",children:/*#__PURE__*/_jsx(\"img\",{src:artistImg,className:\"artistCover\"})})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"faq\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Frequently Asked Questions\"}),/*#__PURE__*/_jsx(\"p\",{className:\"question\",children:\"Why am I getting an alert message when trying to get a music video?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer\",children:\"Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"question\",children:\"Am I able to authorize a different account?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer\",children:\"Close the window and open again.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"question\",children:\"Why does the music video get cut off?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer\",children:\"Occasionally the Spotify song and Youtube MV will be different lengths, so the Spotify song might end early.\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","Navbar","useNavigate","jsx","_jsx","jsxs","_jsxs","Main","searchParams","URLSearchParams","window","location","search","isPlaying","setPlaying","nextState","setNext","user","setUser","accessToken","setToken","get","refreshToken","setRefresh","song","setSong","songImg","setImg","albumLink","setAlbumLink","artistImg","setArtistImg","artist","setArtist","artistLink","setArtistLink","videoId","setvideoId","API_KEY","navigate","getRefreshToken","result","fetch","ok","Error","statusText","token","JSON","parse","text","access_token","refresh_token","alert","error","console","checkPlayState","method","headers","data","is_playing","item","name","artists","album","images","url","getArtistInfo","id","external_urls","spotify","getUserInfo","artistId","intervalId","setInterval","clearInterval","getVideoID","json","items","display_name","className","children","src","allow","allowFullScreen","title","onClick","href","target","alt"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    //spotify vars\n    const [isPlaying, setPlaying] = useState(false);\n    const [nextState, setNext] = useState(false);\n\n    //spotify user \n    const [user, setUser] = useState();\n\n    //spotify authentication\n    const [accessToken, setToken] = useState(searchParams.get('access_token'));\n    const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'))\n\n    //spotify song info\n    const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n    const [songImg, setImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n    const [albumLink, setAlbumLink] = useState();\n\n    //spotify artist info\n    const [artistImg, setArtistImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n    const [artist, setArtist] = useState(\"Spotify\");\n    const [artistLink, setArtistLink] = useState();\n\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");\n    const API_KEY = \"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";\n\n    //navigation\n    const navigate = useNavigate();\n\n    const getRefreshToken = async () => {\n        try {\n            const result = await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);\n            if (!result.ok){\n                throw new Error(`Network response was not ok: ${result.statusText}`);\n            }\n            const token = JSON.parse(await result.text());\n            setToken(token.access_token);\n            setRefresh(token.refresh_token);\n            alert(\"Refreshed Spotify Token!\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    //redirect when new access token granted\n    useEffect(() => {\n        if (accessToken && refreshToken){\n            navigate(`?access_token=${accessToken}&refresh_token=${refreshToken}`);\n        }\n    }, [accessToken, refreshToken])\n    \n    //check whether user is playing music on spotify and get their current song info\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            try {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                if (isPlaying){\n                    try{\n                        if (song != data.item.name){\n                            setNext(!nextState);\n                        } else {\n                            return;\n                        }\n                        setSong(data.item.name);\n                        setArtist(data.item.artists[0]['name']);\n                        setImg(data.item.album.images[0].url);\n                        getArtistInfo(data.item.artists[0].id);\n                        setAlbumLink(data.item.album.external_urls.spotify);\n                    } catch {\n                        setSong(\"Advertisement\")\n                        setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n                        setAlbumLink();\n                    }\n                } else {\n                    setSong(\"Play a song in Spotify!\");\n                    getUserInfo();\n                    setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\")\n                    setAlbumLink();\n                }\n            } catch {\n                setSong(\"Refresh your Spotify Token!\")\n                setPlaying(false);\n            }\n        } catch (error){\n            setSong(\"Refresh your Spotify Token!\")\n            setPlaying(false);\n        }\n    }\n    //gets artist information\n    const getArtistInfo = async (artistId) => {\n        const result = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        const data = JSON.parse(await result.text());\n        setArtistImg(data.images[0].url);\n        setArtistLink(data.external_urls.spotify);\n    }\n    //checks user's current status\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        return () => clearInterval(intervalId);\n    });\n    //gets and sets music video \n    async function getVideoID(){\n        try {\n            const result = await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);\n            const data = await result.json();\n            setvideoId(data.items[0].id.videoId);\n        } catch {\n            alert(\"MV not found/limited to 100 songs a day\");\n            setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");\n            return;\n        }\n    }\n    //gets new mv when next song played\n    useEffect(() => {\n        if (isPlaying){\n            getVideoID();\n        }\n    }, [nextState])\n    //gets username and profile picture of spotify account\n    async function getUserInfo() {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            const data = await result.json();\n            setUser(data.display_name);\n        } catch {\n            setUser('Refresh Spotify Token');\n        }\n    }\n    useEffect(() => {\n        getUserInfo();\n    })\n    return (\n        <div className=\"bg\">\n            <Navbar name={user}/>\n            <div className=\"body\">\n                <div className=\"mvPlayer\">\n                    <iframe\n                        className=\"player\"\n                        src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"YouTube video player\"\n                    ></iframe>\n                </div>\n                <div>\n                    <button onClick={getRefreshToken} className=\"refreshBtn\">Refresh Spotify Token</button>\n                    <div className=\"songDescription\">\n                        <div className=\"songInfo\">\n                            <a href={albumLink} target=\"_blank\"><img src={songImg} alt=\"Album Cover\" className=\"albumCover\"></img></a>\n                            <p className=\"songTitle\">{song}</p>\n                        </div>\n                    </div>\n                    <div className=\"artistDescription\">\n                        <div className=\"artistInfo\">\n                            <h1>{artist}</h1>\n                            <a href={artistLink} target=\"_blank\"><img src={artistImg} className=\"artistCover\"></img></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"faq\">\n                    <h1>Frequently Asked Questions</h1>\n                    <p className=\"question\">Why am I getting an alert message when trying to get a music video?</p>\n                    <p className=\"answer\">Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.</p>\n                    <p className=\"question\">Am I able to authorize a different account?</p>\n                    <p className=\"answer\">Close the window and open again.</p>\n                    <p className=\"question\">Why does the music video get cut off?</p>\n                    <p className=\"answer\">Occasionally the Spotify song and Youtube MV will be different lengths, so the Spotify song might end early.</p>\n                </div>\n            \n        </div>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}