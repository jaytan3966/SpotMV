{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n  const [token, setToken] = useState();\n  let songName = \"ming\";\n  const clientId = \"b59b5bedc995467cb3441d3ed84082a0\";\n  const clientSecret = \"7a24b348d2534bf98e50d5a4a8581aa4\";\n  useEffect(() => {\n    getToken();\n  });\n  async function getToken() {\n    const result = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      body: 'grant_type=client_credentials'\n    });\n    const data = await result.json();\n    setToken(data.access_token);\n    return;\n  }\n  async function getCurSong() {\n    const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    if (result.status == 404) {\n      songName = \"No songs is currently playing!\";\n      return null;\n    }\n    const data = await result.json();\n    songName = data.name;\n    document.getElementById(\"song\").innerText = songName;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCurSong,\n      children: \"Time to Metro Boomin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"song\",\n      children: \"ming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"sSQfE7Ydc7p1cexT51KCOPMqIkg=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","videoId","setvideoId","token","setToken","songName","clientId","clientSecret","getToken","result","fetch","method","headers","btoa","body","data","json","access_token","getCurSong","status","name","document","getElementById","innerText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","frameBorder","allow","allowFullScreen","title","onClick","id","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n    const [token, setToken] = useState();\n    let songName = \"ming\";\n\n    const clientId = \"b59b5bedc995467cb3441d3ed84082a0\";\n    const clientSecret = \"7a24b348d2534bf98e50d5a4a8581aa4\";\n\n    useEffect(() => {\n        getToken();\n    });\n\n    async function getToken(){\n        const result = await fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n            },\n            body: 'grant_type=client_credentials'\n        });\n        const data = await result.json();\n        setToken(data.access_token);\n        return;\n    }\n\n    async function getCurSong(){\n        const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        });\n        if (result.status == 404){\n            songName = \"No songs is currently playing!\"\n            return null;\n        }\n        const data = await result.json();\n        songName = data.name;\n        document.getElementById(\"song\").innerText = songName;\n    }\n\n    \n\n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <div className=\"mvPlayer\">\n            <iframe\n                className=\"player\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"YouTube video player\"\n            ></iframe>\n            </div>\n            <button onClick={getCurSong}>Time to Metro Boomin</button>\n            <h1 id=\"song\">ming</h1>\n        </div>\n        \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}