{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n  const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n  const [song, setSong] = useState();\n  const [next, setNext] = useState(false);\n  const [playing, setPlayer] = useState(false);\n  const [access_token, setToken] = useState(searchParams.get('access_token'));\n  useEffect(() => {\n    getCurSong();\n  }, [next]);\n  async function getCurSong() {\n    const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n    try {\n      const data = await result.json();\n      setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n      if (data.is_playing) {\n        setPlayer(true);\n        //set timer for behavior when song ends\n        console.log(\"playing\");\n        setTimeout(() => {\n          setNext(!next);\n          //change the time to be based on the youtube mv length later\n        }, data.item.duration_ms - data.progress_ms);\n      } else {\n        setPlayer(false);\n        setSong(\"\");\n      }\n    } catch {\n      setSong(\"Advertisement\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Now Playing \", song]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"QqzkCJkvhs/a2PxeiB8xQPoFkHo=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","videoId","setvideoId","song","setSong","next","setNext","playing","setPlayer","access_token","setToken","get","getCurSong","result","fetch","method","headers","data","json","item","name","artists","is_playing","console","log","setTimeout","duration_ms","progress_ms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n    const [song, setSong] = useState();\n    const [next, setNext] = useState(false);\n    const [playing, setPlayer] = useState(false);\n    const [access_token, setToken] = useState(searchParams.get('access_token'));\n\n    useEffect(() => {\n        getCurSong();\n    }, [next]);\n\n    async function getCurSong(){\n        const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        try {\n            const data = await result.json();\n            setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n            \n            if (data.is_playing){\n                setPlayer(true);\n                //set timer for behavior when song ends\n                console.log(\"playing\")\n                setTimeout(() => {\n                    setNext(!next);\n                    //change the time to be based on the youtube mv length later\n                }, data.item.duration_ms-data.progress_ms)\n            } else {\n                setPlayer(false);\n                setSong(\"\")\n            }\n        } catch {\n            setSong(\"Advertisement\")\n        }\n    }\n\n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <div className=\"mvPlayer\">\n            <iframe\n                className=\"player\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"YouTube video player\"\n            ></iframe>\n            </div>\n        \n            <h1>Now Playing {song}</h1>\n        </div>\n        \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}