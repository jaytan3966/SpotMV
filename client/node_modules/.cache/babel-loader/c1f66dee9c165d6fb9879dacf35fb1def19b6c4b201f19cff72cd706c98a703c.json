{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n  const client_id = \"b59b5bedc995467cb3441d3ed84082a0\";\n\n  //spotify vars\n  const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n  const [isPlaying, setPlaying] = useState(false);\n  const [accessToken, setToken] = useState(searchParams.get('access_token'));\n  const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'));\n  //youtube vars\n  const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n\n  // const getRefreshToken = async () => {\n  //     const result = await fetch('http://localhost:3001/refresh_token');\n\n  //     if(result.ok){\n  //         const token = JSON.parse(await result.text());\n  //         setToken(token.access_token);\n  //         setRefresh(token.refresh_token);\n  //         alert(accessToken, refreshToken);\n  //     }\n\n  // }\n\n  // useEffect(() => {\n  //     const intervalId = setInterval(getRefreshToken, 5000);\n  //     return () => clearInterval(intervalId);\n  // })\n\n  const checkPlayState = async () => {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (result.ok) {\n        const data = JSON.parse(await result.text());\n        setPlaying(data.is_playing);\n        if (isPlaying) {\n          try {\n            setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n          } catch {\n            setSong(\"Advertisement Break\");\n          }\n        } else {\n          setSong(\"Play a song on your Spotify Player!\");\n        }\n      } else {\n        setPlaying(false);\n      }\n    } catch (error) {\n      console.error(error);\n      setPlaying(false);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(checkPlayState, 4000);\n    return () => clearInterval(intervalId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"6FsMSGaKuvDk2dYSjFIogJh4KWg=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","client_id","song","setSong","isPlaying","setPlaying","accessToken","setToken","get","refreshToken","setRefresh","videoId","setvideoId","checkPlayState","result","fetch","method","headers","ok","data","JSON","parse","text","is_playing","item","name","artists","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n    const client_id = \"b59b5bedc995467cb3441d3ed84082a0\";\n\n    //spotify vars\n    const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n    const [isPlaying, setPlaying] = useState(false);\n    const [accessToken, setToken] = useState(searchParams.get('access_token'));\n    const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'))\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n\n    // const getRefreshToken = async () => {\n    //     const result = await fetch('http://localhost:3001/refresh_token');\n\n    //     if(result.ok){\n    //         const token = JSON.parse(await result.text());\n    //         setToken(token.access_token);\n    //         setRefresh(token.refresh_token);\n    //         alert(accessToken, refreshToken);\n    //     }\n        \n    // }\n\n    // useEffect(() => {\n    //     const intervalId = setInterval(getRefreshToken, 5000);\n    //     return () => clearInterval(intervalId);\n    // })\n\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            if (result.ok) {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                if (isPlaying){\n                    try{\n                        setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n                    } catch {\n                        setSong(\"Advertisement Break\")\n                    }\n                } else {\n                    setSong(\"Play a song on your Spotify Player!\");\n                }\n            } else {\n                setPlaying(false);\n            }\n        } catch (error){\n            console.error(error);\n            setPlaying(false);\n        }\n    }\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        return () => clearInterval(intervalId);\n    });\n    \n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <div className=\"mvPlayer\">\n            <iframe\n                className=\"player\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"YouTube video player\"\n            ></iframe>\n            </div>\n        \n            <h1>{song}</h1>\n        </div>\n        \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}