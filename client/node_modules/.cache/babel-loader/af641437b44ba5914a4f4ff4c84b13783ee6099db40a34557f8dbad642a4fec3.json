{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n\n  //spotify vars\n  const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n  const [isPlaying, setPlaying] = useState(false);\n  const [accessToken, setToken] = useState(searchParams.get('access_token'));\n  const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'));\n  //youtube vars\n  const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n  const getRefreshToken = async () => {\n    try {\n      const result = await fetch('http://localhost:3001/refresh_token', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refreshToken\n        })\n      });\n      if (!result.ok) {\n        throw new Error(`Network response was not ok: ${result.statusText}`);\n      }\n      const token = JSON.parse(await result.text());\n      setToken(token.access_token);\n      setRefresh(token.refresh_token);\n      alert(accessToken, refreshToken);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(getRefreshToken, 5000);\n    return () => clearInterval(intervalId);\n  });\n  const checkPlayState = async () => {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (result.ok) {\n        const data = JSON.parse(await result.text());\n        setPlaying(data.is_playing);\n        if (isPlaying) {\n          try {\n            setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n          } catch {\n            setSong(\"Advertisement Break\");\n          }\n        } else {\n          setSong(\"Play a song on your Spotify Player!\");\n        }\n      } else {\n        setPlaying(false);\n      }\n    } catch (error) {\n      console.error(error);\n      setPlaying(false);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(checkPlayState, 4000);\n    return () => clearInterval(intervalId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"1OUKRT1XwJPneHOhoxufqkuXizo=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","song","setSong","isPlaying","setPlaying","accessToken","setToken","get","refreshToken","setRefresh","videoId","setvideoId","getRefreshToken","result","fetch","headers","body","JSON","stringify","ok","Error","statusText","token","parse","text","access_token","refresh_token","alert","error","console","intervalId","setInterval","clearInterval","checkPlayState","method","data","is_playing","item","name","artists","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    //spotify vars\n    const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n    const [isPlaying, setPlaying] = useState(false);\n    const [accessToken, setToken] = useState(searchParams.get('access_token'));\n    const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'))\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n\n    const getRefreshToken = async () => {\n        try {\n            const result = await fetch('http://localhost:3001/refresh_token', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({refreshToken})\n            });\n            if (!result.ok){\n                throw new Error(`Network response was not ok: ${result.statusText}`);\n            }\n            const token = JSON.parse(await result.text());\n            setToken(token.access_token);\n            setRefresh(token.refresh_token);\n            alert(accessToken, refreshToken);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        const intervalId = setInterval(getRefreshToken, 5000);\n        return () => clearInterval(intervalId);\n    })\n\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            if (result.ok) {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                if (isPlaying){\n                    try{\n                        setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n                    } catch {\n                        setSong(\"Advertisement Break\")\n                    }\n                } else {\n                    setSong(\"Play a song on your Spotify Player!\");\n                }\n            } else {\n                setPlaying(false);\n            }\n        } catch (error){\n            console.error(error);\n            setPlaying(false);\n        }\n    }\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        return () => clearInterval(intervalId);\n    });\n    \n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <div className=\"mvPlayer\">\n            <iframe\n                className=\"player\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"YouTube video player\"\n            ></iframe>\n            </div>\n        \n            <h1>{song}</h1>\n        </div>\n        \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}