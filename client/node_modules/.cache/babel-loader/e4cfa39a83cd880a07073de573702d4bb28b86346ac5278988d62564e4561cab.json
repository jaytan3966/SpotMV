{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n\n  //spotify vars\n  const [user, setUser] = useState();\n  const [isPlaying, setPlaying] = useState(false);\n  const [nextState, setNext] = useState(false);\n\n  //spotify authentication\n  const [accessToken, setToken] = useState(searchParams.get('access_token'));\n  const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'));\n\n  //spotify song info\n  const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n  const [songImg, setImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n\n  //spotify artist info\n  const [artistImg, setArtistImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n  const [artist, setArtist] = useState(\"Spotify\");\n  const [artistId, setId] = useState();\n\n  //youtube vars\n  const [videoId, setvideoId] = useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");\n  const API_KEY = \"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";\n  const getRefreshToken = async () => {\n    try {\n      const result = await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);\n      if (!result.ok) {\n        throw new Error(`Network response was not ok: ${result.statusText}`);\n      }\n      const token = JSON.parse(await result.text());\n      setToken(token.access_token);\n      setRefresh(token.refresh_token);\n      alert('refreshed!');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //get new access token every hour\n  useEffect(() => {\n    const intervalId = setInterval(getRefreshToken, 1800000);\n    return () => clearInterval(intervalId);\n  });\n  const checkPlayState = async () => {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      try {\n        const data = JSON.parse(await result.text());\n        setPlaying(data.is_playing);\n        if (isPlaying) {\n          try {\n            if (song != data.item.name) {\n              setNext(!nextState);\n            } else {\n              return;\n            }\n            setSong(data.item.name);\n            setArtist(data.item.artists[0]['name']);\n            setImg(data.item.album.images[0].url);\n            setId(data.item.artists[0].id);\n          } catch {\n            setSong(\"Advertisement Break\");\n            setArtist(\"Spotify\");\n            setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n          }\n        } else {\n          setSong(\"Play a song on your Spotify Player!\");\n          setArtist(\"Spotify\");\n          setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n        }\n      } catch {\n        setPlaying(false);\n      }\n    } catch (error) {\n      console.error(error);\n      setPlaying(false);\n    }\n  };\n  const getArtistInfo = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    const data = JSON.parse(await result.json());\n    setId(data.images[0].url);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(checkPlayState, 4000);\n    return () => clearInterval(intervalId);\n  });\n  async function getVideoID() {\n    try {\n      const result = await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);\n      const data = await result.json();\n      setvideoId(data.items[0].id.videoId);\n    } catch {\n      alert(\"MV not found/limited to 100 songs a day\");\n      setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");\n      return;\n    }\n  }\n  useEffect(() => {\n    if (isPlaying) {\n      getVideoID();\n    }\n  }, [nextState]);\n  async function getUserName() {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await result.json();\n      setUser(data.display_name);\n    } catch {\n      setUser('ERROR');\n    }\n  }\n  //gets user name everytime the component renders\n  useEffect(() => {\n    getUserName();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mvPlayer\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"player\",\n          src: `https://www.youtube.com/embed/${videoId}?autoplay=1`,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"YouTube video player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: songImg,\n              alt: \"Album Cover\",\n              className: \"albumCover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"songTitle\",\n              children: song\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artistDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artistInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: artistImg,\n              className: \"artistCover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Frequently Asked Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: \"Why am I getting an alert message when trying to get a music video?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: \"Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: \"Am I able to authorize a different account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: \"This feature has not yet been implemented.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"uSVxtke5pzHCtd295BRallEypQI=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","user","setUser","isPlaying","setPlaying","nextState","setNext","accessToken","setToken","get","refreshToken","setRefresh","song","setSong","songImg","setImg","artistImg","setArtistImg","artist","setArtist","artistId","setId","videoId","setvideoId","API_KEY","getRefreshToken","result","fetch","ok","Error","statusText","token","JSON","parse","text","access_token","refresh_token","alert","error","console","intervalId","setInterval","clearInterval","checkPlayState","method","headers","data","is_playing","item","name","artists","album","images","url","id","getArtistInfo","json","getVideoID","items","getUserName","display_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","alt","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    //spotify vars\n    const [user, setUser] = useState()\n    const [isPlaying, setPlaying] = useState(false);\n    const [nextState, setNext] = useState(false);\n\n    //spotify authentication\n    const [accessToken, setToken] = useState(searchParams.get('access_token'));\n    const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'))\n\n    //spotify song info\n    const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n    const [songImg, setImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n\n    //spotify artist info\n    const [artistImg, setArtistImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n    const [artist, setArtist] = useState(\"Spotify\");\n    const [artistId, setId] = useState();\n\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");\n    const API_KEY = \"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";\n\n    const getRefreshToken = async () => {\n        try {\n            const result = await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);\n            if (!result.ok){\n                throw new Error(`Network response was not ok: ${result.statusText}`);\n            }\n            const token = JSON.parse(await result.text());\n            setToken(token.access_token);\n            setRefresh(token.refresh_token);\n            alert('refreshed!');\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    //get new access token every hour\n    useEffect(() => {\n        const intervalId = setInterval(getRefreshToken, 1800000);\n        return () => clearInterval(intervalId);\n    })\n\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            try {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                if (isPlaying){\n                    try{\n                        if (song != data.item.name){\n                            setNext(!nextState);\n                        } else {\n                            return;\n                        }\n                        setSong(data.item.name);\n                        setArtist(data.item.artists[0]['name']);\n                        setImg(data.item.album.images[0].url);\n                        setId(data.item.artists[0].id);\n                    } catch {\n                        setSong(\"Advertisement Break\")\n                        setArtist(\"Spotify\");\n                        setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n                    }\n                } else {\n                    setSong(\"Play a song on your Spotify Player!\");\n                    setArtist(\"Spotify\");\n                    setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\")\n                }\n            } catch {\n                setPlaying(false);\n            }\n        } catch (error){\n            console.error(error);\n            setPlaying(false);\n        }\n    }\n    const getArtistInfo = async () => {\n        const result = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        const data = JSON.parse(await result.json());\n        setId(data.images[0].url);\n    }\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        return () => clearInterval(intervalId);\n    });\n\n    async function getVideoID(){\n        try {\n            const result = await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);\n            const data = await result.json();\n            setvideoId(data.items[0].id.videoId);\n        } catch {\n            alert(\"MV not found/limited to 100 songs a day\");\n            setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");\n            return;\n        }\n    }\n    useEffect(() => {\n        if (isPlaying){\n            getVideoID();\n        }\n    }, [nextState])\n\n    async function getUserName() {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            const data = await result.json();\n            setUser(data.display_name);\n        } catch {\n            setUser('ERROR');\n        }\n    }\n    //gets user name everytime the component renders\n    useEffect(() => {\n        getUserName();\n    })\n\n    return (\n        <div className=\"bg\">\n            <Navbar name={user}/>\n            <div className=\"body\">\n                <div className=\"mvPlayer\">\n                    <iframe\n                        className=\"player\"\n                        src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"YouTube video player\"\n                    ></iframe>\n                </div>\n                <div>\n                    <div className=\"songDescription\">\n                        <div className=\"songInfo\">\n                            <img src={songImg} alt=\"Album Cover\" className=\"albumCover\"></img>\n                            <h2 className=\"songTitle\">{song}</h2>\n                            <p>{artist}</p>\n                        </div>\n                    </div>\n                    <div className=\"artistDescription\">\n                        <div className=\"artistInfo\">\n                            <h1>{artist}</h1>\n                            <img src={artistImg} className=\"artistCover\"></img>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"faq\">\n                    <h1>Frequently Asked Questions</h1>\n                    <p className=\"question\">Why am I getting an alert message when trying to get a music video?</p>\n                    <p className=\"answer\">Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.</p>\n                    <p className=\"question\">Am I able to authorize a different account?</p>\n                    <p className=\"answer\">This feature has not yet been implemented.</p>\n                </div>\n            \n        </div>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}