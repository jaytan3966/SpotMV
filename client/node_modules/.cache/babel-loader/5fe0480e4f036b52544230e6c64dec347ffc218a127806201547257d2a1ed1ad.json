{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n\n  //spotify vars\n  const [song, setSong] = useState();\n  const [getNext, setNext] = useState(false);\n  const [isPlaying, setPlaying] = useState(false);\n  const [access_token, setToken] = useState(searchParams.get('access_token'));\n\n  //youtube vars\n  const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n  const checkPlayState = async () => {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      if (result.ok) {\n        const data = JSON.parse(await result.text());\n        setPlaying(data.is_playing);\n        setSong(data.item.name);\n      } else {\n        setPlaying(false);\n      }\n    } catch (error) {\n      console.error(error);\n      setPlaying(false);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(checkPlayState, 4000);\n    return () => clearInterval(intervalId);\n  }, [getNext]);\n  useEffect(() => {\n    if (isPlaying) {\n      getCurSong();\n    } else {\n      setSong(\"Play a song on your Spotify Player!\");\n    }\n  }, [isPlaying, getNext]);\n  async function getCurSong() {\n    const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n    try {\n      const data = await result.json();\n      setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n\n      //set timer for behavior when song ends\n      setTimeout(() => {\n        setNext(!getNext);\n        //change the time to be based on the youtube mv length later\n      }, data.item.duration_ms - data.progress_ms);\n    } catch {\n      setSong(\"Advertisement Break\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"5l82AJ5//4CS/Gk/YkYzihSU0uU=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","song","setSong","getNext","setNext","isPlaying","setPlaying","access_token","setToken","get","videoId","setvideoId","checkPlayState","result","fetch","method","headers","ok","data","JSON","parse","text","is_playing","item","name","error","console","intervalId","setInterval","clearInterval","getCurSong","json","artists","setTimeout","duration_ms","progress_ms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    //spotify vars\n    const [song, setSong] = useState();\n    const [getNext, setNext] = useState(false);\n    const [isPlaying, setPlaying] = useState(false);\n    const [access_token, setToken] = useState(searchParams.get('access_token'));\n\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"oa8kjoT-MrM\");\n\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${access_token}`\n                }\n            });\n            if (result.ok) {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                setSong(data.item.name);\n            } else {\n                setPlaying(false);\n            }\n        } catch (error){\n            console.error(error);\n            setPlaying(false);\n        }\n    }\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        \n        return () => clearInterval(intervalId);\n    }, [getNext]);\n\n    useEffect(() => {\n        if (isPlaying){\n            getCurSong();\n        } else {\n            setSong(\"Play a song on your Spotify Player!\");\n        }\n    }, [isPlaying, getNext]);\n\n    async function getCurSong(){\n        const result = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        try {\n            const data = await result.json();\n            setSong(data.item.name + \" by \" + data.item.artists[0]['name']);\n            \n            //set timer for behavior when song ends\n            setTimeout(() => {\n                setNext(!getNext);\n                //change the time to be based on the youtube mv length later\n            }, data.item.duration_ms-data.progress_ms)\n            \n        } catch {\n            setSong(\"Advertisement Break\")\n        }\n    }\n\n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <div className=\"mvPlayer\">\n            <iframe\n                className=\"player\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"YouTube video player\"\n            ></iframe>\n            </div>\n        \n            <h1>{song}</h1>\n        </div>\n        \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}