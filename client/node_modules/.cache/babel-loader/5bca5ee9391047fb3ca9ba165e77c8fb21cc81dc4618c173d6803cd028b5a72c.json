{"ast":null,"code":"var _jsxFileName = \"/Users/jaydentan/SpotifyMV/client/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n\n  //spotify vars\n  const [isPlaying, setPlaying] = useState(false);\n  const [nextState, setNext] = useState(false);\n\n  //spotify user \n  const [user, setUser] = useState();\n\n  //spotify authentication\n  const [accessToken, setToken] = useState(searchParams.get('access_token'));\n  const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'));\n\n  //spotify song info\n  const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n  const [songImg, setImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n  const [albumLink, setAlbumLink] = useState();\n\n  //spotify artist info\n  const [artistImg, setArtistImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n  const [artist, setArtist] = useState(\"Spotify\");\n  const [artistLink, setArtistLink] = useState();\n\n  //youtube vars\n  const [videoId, setvideoId] = useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");\n  const API_KEY = \"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";\n\n  //navigation\n  const navigate = useNavigate();\n  const getRefreshToken = async () => {\n    try {\n      const result = await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);\n      if (!result.ok) {\n        throw new Error(`Network response was not ok: ${result.statusText}`);\n      }\n      const token = JSON.parse(await result.text());\n      setToken(token.access_token);\n      setRefresh(token.refresh_token);\n      alert(\"Refreshed Spotify Token!\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //redirect when new access token granted\n  useEffect(() => {\n    if (accessToken && refreshToken) {\n      navigate(`?access_token=${accessToken}&refresh_token=${refreshToken}`);\n    }\n  }, [accessToken, refreshToken]);\n\n  //check whether user is playing music on spotify and get their current song info\n  const checkPlayState = async () => {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      try {\n        const data = JSON.parse(await result.text());\n        setPlaying(data.is_playing);\n        if (isPlaying) {\n          try {\n            if (song != data.item.name) {\n              setNext(!nextState);\n            } else {\n              return;\n            }\n            setSong(data.item.name);\n            setArtist(data.item.artists[0]['name']);\n            setImg(data.item.album.images[0].url);\n            getArtistInfo(data.item.artists[0].id);\n            setAlbumLink(data.item.album.external_urls.spotify);\n          } catch {\n            setSong(\"Advertisement\");\n            setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n            setAlbumLink();\n          }\n        } else {\n          setSong(\"Refresh your Spotify Token!\");\n          setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n          setAlbumLink();\n        }\n      } catch {\n        setSong(\"Refresh your Spotify Token!\");\n        setPlaying(false);\n      }\n    } catch (error) {\n      setSong(\"Refresh your Spotify Token!\");\n      setPlaying(false);\n    }\n  };\n  //gets artist information\n  const getArtistInfo = async artistId => {\n    const result = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    const data = JSON.parse(await result.text());\n    setArtistImg(data.images[0].url);\n    setArtistLink(data.external_urls.spotify);\n  };\n  //checks user's current status\n  useEffect(() => {\n    const intervalId = setInterval(checkPlayState, 4000);\n    return () => clearInterval(intervalId);\n  });\n  //gets and sets music video \n  async function getVideoID() {\n    try {\n      const result = await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);\n      const data = await result.json();\n      setvideoId(data.items[0].id.videoId);\n    } catch {\n      alert(\"MV not found/limited to 100 songs a day\");\n      setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");\n      return;\n    }\n  }\n  //gets new mv when next song played\n  useEffect(() => {\n    if (isPlaying) {\n      getVideoID();\n    }\n  }, [nextState]);\n  //gets username and profile picture of spotify account\n  async function getUserInfo() {\n    try {\n      const result = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await result.json();\n      setUser(data.display_name);\n    } catch {\n      setUser('Refresh Spotify Token');\n    }\n  }\n  useEffect(() => {\n    getUserInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mvPlayer\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"player\",\n          src: `https://www.youtube.com/embed/${videoId}?autoplay=1`,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"YouTube video player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRefreshToken,\n          className: \"refreshBtn\",\n          children: \"Refresh Spotify Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: albumLink,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: songImg,\n                alt: \"Album Cover\",\n                className: \"albumCover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"songTitle\",\n              children: song\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artistDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artistInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: artistLink,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artistImg,\n                className: \"artistCover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Frequently Asked Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: \"Why am I getting an alert message when trying to get a music video?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: \"Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: \"Am I able to authorize a different account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: \"Close the window and open again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: \"Why does the music video get cut off?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: \"Occasionally the Spotify song and Youtube MV will be different lengths, so the Spotify song might end early.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"YVfEgmz3mQZrviPkQhmqwLsYcFg=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","useNavigate","jsxDEV","_jsxDEV","Main","_s","searchParams","URLSearchParams","window","location","search","isPlaying","setPlaying","nextState","setNext","user","setUser","accessToken","setToken","get","refreshToken","setRefresh","song","setSong","songImg","setImg","albumLink","setAlbumLink","artistImg","setArtistImg","artist","setArtist","artistLink","setArtistLink","videoId","setvideoId","API_KEY","navigate","getRefreshToken","result","fetch","ok","Error","statusText","token","JSON","parse","text","access_token","refresh_token","alert","error","console","checkPlayState","method","headers","data","is_playing","item","name","artists","album","images","url","getArtistInfo","id","external_urls","spotify","artistId","intervalId","setInterval","clearInterval","getVideoID","json","items","getUserInfo","display_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allow","allowFullScreen","title","onClick","href","target","alt","_c","$RefreshReg$"],"sources":["/Users/jaydentan/SpotifyMV/client/src/views/main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './main.css';\nimport Navbar from \"./components/navbar\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Main(){\n    const searchParams = new URLSearchParams(window.location.search);\n\n    //spotify vars\n    const [isPlaying, setPlaying] = useState(false);\n    const [nextState, setNext] = useState(false);\n\n    //spotify user \n    const [user, setUser] = useState();\n\n    //spotify authentication\n    const [accessToken, setToken] = useState(searchParams.get('access_token'));\n    const [refreshToken, setRefresh] = useState(searchParams.get('refresh_token'))\n\n    //spotify song info\n    const [song, setSong] = useState(\"Play a song on your Spotify Player!\");\n    const [songImg, setImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n    const [albumLink, setAlbumLink] = useState();\n\n    //spotify artist info\n    const [artistImg, setArtistImg] = useState(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n    const [artist, setArtist] = useState(\"Spotify\");\n    const [artistLink, setArtistLink] = useState();\n\n    //youtube vars\n    const [videoId, setvideoId] = useState(\"ZncbtRo7RXs?si=ohl4WCuqvY0JJKub\");\n    const API_KEY = \"AIzaSyBuf83t9pfPd0GJPaFwqg-gkIP6dx195Zw\";\n\n    //navigation\n    const navigate = useNavigate();\n\n    const getRefreshToken = async () => {\n        try {\n            const result = await fetch(`http://localhost:3001/refresh_token/${refreshToken}`);\n            if (!result.ok){\n                throw new Error(`Network response was not ok: ${result.statusText}`);\n            }\n            const token = JSON.parse(await result.text());\n            setToken(token.access_token);\n            setRefresh(token.refresh_token);\n            alert(\"Refreshed Spotify Token!\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    //redirect when new access token granted\n    useEffect(() => {\n        if (accessToken && refreshToken){\n            navigate(`?access_token=${accessToken}&refresh_token=${refreshToken}`);\n        }\n    }, [accessToken, refreshToken])\n    \n    //check whether user is playing music on spotify and get their current song info\n    const checkPlayState = async () => {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me/player', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            try {\n                const data = JSON.parse(await result.text());\n                setPlaying(data.is_playing);\n                if (isPlaying){\n                    try{\n                        if (song != data.item.name){\n                            setNext(!nextState);\n                        } else {\n                            return;\n                        }\n                        setSong(data.item.name);\n                        setArtist(data.item.artists[0]['name']);\n                        setImg(data.item.album.images[0].url);\n                        getArtistInfo(data.item.artists[0].id);\n                        setAlbumLink(data.item.album.external_urls.spotify);\n                    } catch {\n                        setSong(\"Advertisement\")\n                        setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\");\n                        setAlbumLink();\n                    }\n                } else {\n                    setSong(\"Refresh your Spotify Token!\")\n                    setImg(\"https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png\")\n                    setAlbumLink();\n                }\n            } catch {\n                setSong(\"Refresh your Spotify Token!\")\n                setPlaying(false);\n            }\n        } catch (error){\n            setSong(\"Refresh your Spotify Token!\")\n            setPlaying(false);\n        }\n    }\n    //gets artist information\n    const getArtistInfo = async (artistId) => {\n        const result = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        const data = JSON.parse(await result.text());\n        setArtistImg(data.images[0].url);\n        setArtistLink(data.external_urls.spotify);\n    }\n    //checks user's current status\n    useEffect(() => {\n        const intervalId = setInterval(checkPlayState, 4000);\n        return () => clearInterval(intervalId);\n    });\n    //gets and sets music video \n    async function getVideoID(){\n        try {\n            const result = await fetch(`https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&q=${song} by ${artist}Song Official MV&part=snippet`);\n            const data = await result.json();\n            setvideoId(data.items[0].id.videoId);\n        } catch {\n            alert(\"MV not found/limited to 100 songs a day\");\n            setvideoId(\"m6pTbEz4w3o?si=63bgCZ2ABohgz8_1\");\n            return;\n        }\n    }\n    //gets new mv when next song played\n    useEffect(() => {\n        if (isPlaying){\n            getVideoID();\n        }\n    }, [nextState])\n    //gets username and profile picture of spotify account\n    async function getUserInfo() {\n        try {\n            const result = await fetch('https://api.spotify.com/v1/me', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            const data = await result.json();\n            setUser(data.display_name);\n        } catch {\n            setUser('Refresh Spotify Token');\n        }\n    }\n    useEffect(() => {\n        getUserInfo();\n    })\n    return (\n        <div className=\"bg\">\n            <Navbar name={user}/>\n            <div className=\"body\">\n                <div className=\"mvPlayer\">\n                    <iframe\n                        className=\"player\"\n                        src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"YouTube video player\"\n                    ></iframe>\n                </div>\n                <div>\n                    <button onClick={getRefreshToken} className=\"refreshBtn\">Refresh Spotify Token</button>\n                    <div className=\"songDescription\">\n                        <div className=\"songInfo\">\n                            <a href={albumLink} target=\"_blank\"><img src={songImg} alt=\"Album Cover\" className=\"albumCover\"></img></a>\n                            <p className=\"songTitle\">{song}</p>\n                        </div>\n                    </div>\n                    <div className=\"artistDescription\">\n                        <div className=\"artistInfo\">\n                            <h1>{artist}</h1>\n                            <a href={artistLink} target=\"_blank\"><img src={artistImg} className=\"artistCover\"></img></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"faq\">\n                    <h1>Frequently Asked Questions</h1>\n                    <p className=\"question\">Why am I getting an alert message when trying to get a music video?</p>\n                    <p className=\"answer\">Your song may not have a music video or you may have hit the 100 song limit per day for accessing Youtube.</p>\n                    <p className=\"question\">Am I able to authorize a different account?</p>\n                    <p className=\"answer\">Close the window and open again.</p>\n                    <p className=\"question\">Why does the music video get cut off?</p>\n                    <p className=\"answer\">Occasionally the Spotify song and Youtube MV will be different lengths, so the Spotify song might end early.</p>\n                </div>\n            \n        </div>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}